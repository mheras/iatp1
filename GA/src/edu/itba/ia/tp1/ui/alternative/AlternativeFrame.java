package edu.itba.ia.tp1.ui.alternative;

import edu.itba.ia.tp1.ui.MethodComboBoxModel;
import edu.itba.ia.tp1.ui.alternative.listener.AlternativeSwitchExecuteActionListener;

/**
 *
 * @author Martín A. Heras
 */
public class AlternativeFrame extends javax.swing.JFrame {
    
	private static final long serialVersionUID = 5385455225127364388L;
	
    private javax.swing.JButton buttonSwitchExecution;
    private javax.swing.JComboBox comboReplacementMethod;
    private javax.swing.JComboBox comboProblemImpl;
    private javax.swing.JComboBox comboSelectionMethod;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelMaximumParents;
    private javax.swing.JLabel labelMaximumParents1;
    private javax.swing.JLabel labelMutationProbability;
    private javax.swing.JLabel labelMutationProbability1;
    private javax.swing.JLabel labelPopulationSize;
    private javax.swing.JLabel labelReplacementMethod;
    private javax.swing.JLabel labelSelectionMethod;
    private javax.swing.JPanel panelBit0;
    private javax.swing.JPanel panelBit1;
    private javax.swing.JPanel panelBit2;
    private javax.swing.JPanel panelBit3;
    private javax.swing.JPanel panelBit4;
    private javax.swing.JPanel panelCharts;
    private javax.swing.JPanel panelExecutionParameters;
    private javax.swing.JPanel panelStatusBar;
    private javax.swing.JSpinner spinnerMaximumGenerations;
    private javax.swing.JSpinner spinnerMaximumParents;
    private javax.swing.JSpinner spinnerMutationProbability;
    private javax.swing.JSpinner spinnerPopulationSize;
	
	/** Creates new form AlternativeFrame */
    public AlternativeFrame() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        panelStatusBar = new javax.swing.JPanel();
        labelInfo = new javax.swing.JLabel();
        panelCharts = new javax.swing.JPanel();
        panelBit4 = AlternativeAptitudeBit4Chart.getInstance().getChartPanel();
        panelBit3 = AlternativeAptitudeBit3Chart.getInstance().getChartPanel();
        panelBit2 = AlternativeAptitudeBit2Chart.getInstance().getChartPanel();
        panelBit1 = AlternativeAptitudeBit1Chart.getInstance().getChartPanel();
        panelBit0 = AlternativeAptitudeBit0Chart.getInstance().getChartPanel();
        panelExecutionParameters = new javax.swing.JPanel();
        labelSelectionMethod = new javax.swing.JLabel();
        comboSelectionMethod = new javax.swing.JComboBox();
        comboReplacementMethod = new javax.swing.JComboBox();
        labelReplacementMethod = new javax.swing.JLabel();
        spinnerMutationProbability = new javax.swing.JSpinner();
        labelMutationProbability = new javax.swing.JLabel();
        labelPopulationSize = new javax.swing.JLabel();
        spinnerPopulationSize = new javax.swing.JSpinner();
        labelMaximumParents = new javax.swing.JLabel();
        spinnerMaximumParents = new javax.swing.JSpinner();
        labelMaximumParents1 = new javax.swing.JLabel();
        spinnerMaximumGenerations = new javax.swing.JSpinner();
        buttonSwitchExecution = new javax.swing.JButton();
        labelMutationProbability1 = new javax.swing.JLabel();
        comboProblemImpl = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary2BCD Converter Genetic Algorithm (Alternative)");
        setName("Form");
        setResizable(false);

        panelStatusBar.setBackground(java.awt.SystemColor.inactiveCaption);
        panelStatusBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelStatusBar.setName("panelStatusBar"); 

        labelInfo.setName("labelInfo");

        javax.swing.GroupLayout panelStatusBarLayout = new javax.swing.GroupLayout(panelStatusBar);
        panelStatusBar.setLayout(panelStatusBarLayout);
        panelStatusBarLayout.setHorizontalGroup(
            panelStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusBarLayout.createSequentialGroup()
                .addGap(461, 461, 461)
                .addComponent(labelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelStatusBarLayout.setVerticalGroup(
            panelStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelCharts.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelCharts.setName("panelCharts");
        panelCharts.setLayout(new java.awt.GridLayout());

        panelBit4.setName("panelBit4");

        javax.swing.GroupLayout panelBit4Layout = new javax.swing.GroupLayout(panelBit4);
        panelBit4.setLayout(panelBit4Layout);
        panelBit4Layout.setHorizontalGroup(
            panelBit4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelBit4Layout.setVerticalGroup(
            panelBit4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        panelCharts.add(panelBit4);

        panelBit3.setName("panelBit3");

        javax.swing.GroupLayout panelBit3Layout = new javax.swing.GroupLayout(panelBit3);
        panelBit3.setLayout(panelBit3Layout);
        panelBit3Layout.setHorizontalGroup(
            panelBit3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelBit3Layout.setVerticalGroup(
            panelBit3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        panelCharts.add(panelBit3);

        panelBit2.setName("panelBit2");

        javax.swing.GroupLayout panelBit2Layout = new javax.swing.GroupLayout(panelBit2);
        panelBit2.setLayout(panelBit2Layout);
        panelBit2Layout.setHorizontalGroup(
            panelBit2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelBit2Layout.setVerticalGroup(
            panelBit2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        panelCharts.add(panelBit2);

        panelBit1.setName("panelBit1");

        javax.swing.GroupLayout panelBit1Layout = new javax.swing.GroupLayout(panelBit1);
        panelBit1.setLayout(panelBit1Layout);
        panelBit1Layout.setHorizontalGroup(
            panelBit1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelBit1Layout.setVerticalGroup(
            panelBit1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        panelCharts.add(panelBit1);

        panelBit0.setName("panelBit0");

        javax.swing.GroupLayout panelBit0Layout = new javax.swing.GroupLayout(panelBit0);
        panelBit0.setLayout(panelBit0Layout);
        panelBit0Layout.setHorizontalGroup(
            panelBit0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelBit0Layout.setVerticalGroup(
            panelBit0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        panelCharts.add(panelBit0);

        panelExecutionParameters.setBorder(javax.swing.BorderFactory.createTitledBorder("Execution Parameters"));
        panelExecutionParameters.setName("panelExecutionParameters");

        labelSelectionMethod.setText("Selection method:");
        labelSelectionMethod.setName("labelSelectionMethod");

        comboSelectionMethod.setModel(new MethodComboBoxModel());
        comboSelectionMethod.setName("comboSelectionMethod");

        comboReplacementMethod.setModel(new MethodComboBoxModel());
        comboReplacementMethod.setName("comboReplacementMethod");

        labelReplacementMethod.setText("Replacement method:");
        labelReplacementMethod.setName("labelReplacementMethod");

        spinnerMutationProbability.setModel(new javax.swing.SpinnerNumberModel(0.15d, 0.0d, 1.0d, 0.05d));
        spinnerMutationProbability.setToolTipText("");
        spinnerMutationProbability.setName("spinnerMutationProbability");

        labelMutationProbability.setText("Mutation probability:");
        labelMutationProbability.setName("labelMutationProbability");

        labelPopulationSize.setText("Population size:");
        labelPopulationSize.setName("labelPopulationSize");

        spinnerPopulationSize.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(800), Long.valueOf(100), null, Long.valueOf(1)));
        spinnerPopulationSize.setToolTipText("");
        spinnerPopulationSize.setName("spinnerPopulationSize");

        labelMaximumParents.setText("Maximum parents:");
        labelMaximumParents.setName("labelMaximumParents");

        spinnerMaximumParents.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(180), Long.valueOf(2), null, Long.valueOf(2)));
        spinnerMaximumParents.setToolTipText("");
        spinnerMaximumParents.setName("spinnerMaximumParents");

        labelMaximumParents1.setText("Maximum generations:");
        labelMaximumParents1.setName("labelMaximumParents1");

        spinnerMaximumGenerations.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(10000L), Long.valueOf(1L), null, Long.valueOf(1L)));
        spinnerMaximumGenerations.setToolTipText("");
        spinnerMaximumGenerations.setName("spinnerMaximumGenerations");

        buttonSwitchExecution.setText("Execute");
        buttonSwitchExecution.setName("buttonSwitchExecution");
        buttonSwitchExecution.addActionListener(new AlternativeSwitchExecuteActionListener());

        labelMutationProbability1.setText("Problem representation:");
        labelMutationProbability1.setName("labelMutationProbability1");

        comboProblemImpl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Circuit Tree", "Circuit String" }));
        comboProblemImpl.setName("comboReplacementMethod1");

        javax.swing.GroupLayout panelExecutionParametersLayout = new javax.swing.GroupLayout(panelExecutionParameters);
        panelExecutionParameters.setLayout(panelExecutionParametersLayout);
        panelExecutionParametersLayout.setHorizontalGroup(
            panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelExecutionParametersLayout.createSequentialGroup()
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                                .addComponent(labelPopulationSize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                                .addComponent(spinnerPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                                .addComponent(labelMaximumParents)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                                .addComponent(spinnerMaximumParents, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                                .addComponent(labelMaximumParents1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                                .addComponent(spinnerMaximumGenerations, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(91, 91, 91)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                                .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSelectionMethod)
                                    .addComponent(labelReplacementMethod)
                                    .addComponent(labelMutationProbability))
                                .addGap(15, 15, 15)
                                .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboReplacementMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboSelectionMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerMutationProbability, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                                .addComponent(labelMutationProbability1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboProblemImpl, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(buttonSwitchExecution, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelExecutionParametersLayout.setVerticalGroup(
            panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPopulationSize))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerMaximumParents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMaximumParents))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerMaximumGenerations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMaximumParents1)))
                    .addGroup(panelExecutionParametersLayout.createSequentialGroup()
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboSelectionMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSelectionMethod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboReplacementMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelReplacementMethod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerMutationProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMutationProbability))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelExecutionParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMutationProbability1)
                            .addComponent(comboProblemImpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(buttonSwitchExecution)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExecutionParameters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCharts, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCharts, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelExecutionParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlternativeFrame().setVisible(true);
            }
        });
    }

	public javax.swing.JButton getButtonSwitchExecution() {
		return buttonSwitchExecution;
	}

	public javax.swing.JComboBox getComboReplacementMethod() {
		return comboReplacementMethod;
	}

	public javax.swing.JComboBox getComboProblemImpl() {
		return comboProblemImpl;
	}

	public javax.swing.JComboBox getComboSelectionMethod() {
		return comboSelectionMethod;
	}

	public javax.swing.JLabel getLabelInfo() {
		return labelInfo;
	}

	public javax.swing.JLabel getLabelMaximumParents() {
		return labelMaximumParents;
	}

	public javax.swing.JLabel getLabelMaximumParents1() {
		return labelMaximumParents1;
	}

	public javax.swing.JLabel getLabelMutationProbability() {
		return labelMutationProbability;
	}

	public javax.swing.JLabel getLabelMutationProbability1() {
		return labelMutationProbability1;
	}

	public javax.swing.JLabel getLabelPopulationSize() {
		return labelPopulationSize;
	}

	public javax.swing.JLabel getLabelReplacementMethod() {
		return labelReplacementMethod;
	}

	public javax.swing.JLabel getLabelSelectionMethod() {
		return labelSelectionMethod;
	}

	public javax.swing.JPanel getPanelBit0() {
		return panelBit0;
	}

	public javax.swing.JPanel getPanelBit1() {
		return panelBit1;
	}

	public javax.swing.JPanel getPanelBit2() {
		return panelBit2;
	}

	public javax.swing.JPanel getPanelBit3() {
		return panelBit3;
	}

	public javax.swing.JPanel getPanelBit4() {
		return panelBit4;
	}

	public javax.swing.JPanel getPanelCharts() {
		return panelCharts;
	}

	public javax.swing.JPanel getPanelExecutionParameters() {
		return panelExecutionParameters;
	}

	public javax.swing.JPanel getPanelStatusBar() {
		return panelStatusBar;
	}

	public javax.swing.JSpinner getSpinnerMaximumGenerations() {
		return spinnerMaximumGenerations;
	}

	public javax.swing.JSpinner getSpinnerMaximumParents() {
		return spinnerMaximumParents;
	}

	public javax.swing.JSpinner getSpinnerMutationProbability() {
		return spinnerMutationProbability;
	}

	public javax.swing.JSpinner getSpinnerPopulationSize() {
		return spinnerPopulationSize;
	}  
}
